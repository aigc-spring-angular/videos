WEBVTT
Kind: subtitles
Language: en

00:00:00.000 --> 00:00:02.880
SPEAKER: "Multiple components
match node with tagname."

00:00:02.880 --> 00:00:04.290
When you encounter
this error, it

00:00:04.290 --> 00:00:07.200
means two or more components
use the same element name.

00:00:07.200 --> 00:00:10.590
The element selectors of all
components within an NgModule

00:00:10.590 --> 00:00:13.440
must be unique, because when
there's a name collision,

00:00:13.440 --> 00:00:15.660
Angular has no way of
knowing which component

00:00:15.660 --> 00:00:17.210
to render in the template.

00:00:17.210 --> 00:00:20.430
Let's take a look at a simple
reproduction and quick fix.

00:00:20.430 --> 00:00:22.920
In the code, we have
an icon component

00:00:22.920 --> 00:00:26.040
with a selector
name of mat-icon.

00:00:26.040 --> 00:00:28.860
The component is then declared
with that selector in the app

00:00:28.860 --> 00:00:30.010
component template.

00:00:30.010 --> 00:00:32.369
But when we attempt to run
the app, we get the error

00:00:32.369 --> 00:00:35.910
"Multiple components match
node with tagname mat-icon."

00:00:35.910 --> 00:00:39.210
Your IDE should be able to
catch the error in advance.

00:00:39.210 --> 00:00:41.670
Notice how when we hover
over the red underline,

00:00:41.670 --> 00:00:43.980
we get the feedback that
more than one component

00:00:43.980 --> 00:00:45.270
matched on this element.

00:00:45.270 --> 00:00:48.690
In addition, it tells us exactly
which classes are in conflict.

00:00:48.690 --> 00:00:52.020
In this case, the mat-icon
and the icon component.

00:00:52.020 --> 00:00:55.140
Alternatively, we can debug
from the error in the browser

00:00:55.140 --> 00:00:55.830
console.

00:00:55.830 --> 00:00:57.870
Find the link to the
template in the stack trace

00:00:57.870 --> 00:01:00.400
to determine which line
of code caused the issue.

00:01:00.400 --> 00:01:02.850
Then we need to figure out
which two components share

00:01:02.850 --> 00:01:03.930
the same selector.

00:01:03.930 --> 00:01:06.780
The first technique you
might try is a global search.

00:01:06.780 --> 00:01:10.320
In VS Code, use Control-Shift-F
to bring up the Search bar

00:01:10.320 --> 00:01:13.410
and look for any component files
that use that selector name.

00:01:13.410 --> 00:01:15.930
If you have two conflicting
components in your code base,

00:01:15.930 --> 00:01:17.620
simply rename one of them.

00:01:17.620 --> 00:01:20.610
However, in this demo,
we only have one match.

00:01:20.610 --> 00:01:23.490
And that means the collision
is caused by a third party

00:01:23.490 --> 00:01:24.150
library.

00:01:24.150 --> 00:01:25.890
Because you likely
don't have control

00:01:25.890 --> 00:01:28.560
over the name of a component
in a third party library,

00:01:28.560 --> 00:01:31.560
your only option is to
rename your local component.

00:01:31.560 --> 00:01:35.370
Notice how when we rename
mat-icon to app-icon the error

00:01:35.370 --> 00:01:36.100
goes away.

00:01:36.100 --> 00:01:37.980
Now, there are a couple
of best practices

00:01:37.980 --> 00:01:40.770
that we can follow to prevent
this error from ever happening.

00:01:40.770 --> 00:01:43.860
Selectors should always be
formatted in kebab case.

00:01:43.860 --> 00:01:46.260
Even though it is possible
to use a single word

00:01:46.260 --> 00:01:48.330
as a selector, it's
generally better

00:01:48.330 --> 00:01:51.330
to use a consistent set of
characters to prefix it.

00:01:51.330 --> 00:01:54.570
When you use the Angular CLI,
it will prefix your component

00:01:54.570 --> 00:01:57.240
names with "app" by default.
This convention makes

00:01:57.240 --> 00:01:59.460
it easy to distinguish
which components are

00:01:59.460 --> 00:02:02.610
local to your code base and
which components are external,

00:02:02.610 --> 00:02:05.220
like Material, which
are prefixed with "mat."

00:02:05.220 --> 00:02:06.990
Another best practice
that can help here

00:02:06.990 --> 00:02:08.789
is one component per file.

00:02:08.789 --> 00:02:10.680
When you have one
component per file,

00:02:10.680 --> 00:02:12.840
the file name
generally corresponds

00:02:12.840 --> 00:02:14.400
to the selector
name, which makes

00:02:14.400 --> 00:02:17.280
it more difficult to end up
with two components in your code

00:02:17.280 --> 00:02:19.290
base that share a selector name.

00:02:19.290 --> 00:02:20.680
Let's go ahead and recap.

00:02:20.680 --> 00:02:23.520
When you encounter the
"Multiple components match node

00:02:23.520 --> 00:02:25.890
with tagname error," you
have a name collision

00:02:25.890 --> 00:02:28.140
between two or more
components which will likely

00:02:28.140 --> 00:02:30.570
require you to change
the selector name in one

00:02:30.570 --> 00:02:31.990
of your local components.

00:02:31.990 --> 00:02:34.530
Make sure to follow best
practices to avoid issues

00:02:34.530 --> 00:02:36.870
like this, and refer to
the Angular style guide

00:02:36.870 --> 00:02:40.520
in the official documentation
for additional details.

